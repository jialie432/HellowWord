https://medium.com/@ruthmpardee/passing-data-between-react-components-103ad82ebd17

# parent to child use props

<TodoLIst listNameFromParent={listName} />

in TodoList component: 
{this.props.listNameFromParent}

Child to Parent - use callback and states
1. define state in parent
consturctor (props){
	this.state= {
		listDataFromChild : null
	};
1. define a call in parent:
<TodoItem callbackFromParent={this.myCallback}/>
myCallback = (dataFromChild) => }
	this.setState({listDataFromChild: dataFromChild});
}
2. in child, pass the data to callbackFromparent function
 someFn = () => {
	this.props.callbackFromParent(listInfo);
}

## fetch data using Fetch
constructor:
this.state = {
	hits:[],
	isLoading:false,
	error:null,
	};
fetch(URL)
	.then(response => {
		if(response.ok) {
			return response.json();
		} else {
			throw new Error("cannot retreive data");
		}
	})
	.then(data=> this.setState({hits:data.hits, isLoading:false}))
	.catch(error => this.setState({error,isLoading:false}));
## destructing
const {hits.isLoading,error}=this.state;
## render array in table:
{hits.map(hit =>
		<li key ={hit.ObjectID>
			<a href={hit.url}>{hit.title}</a>
		</li>
		)}

## use axios
axios.get(URL)
	.then(result =>this.setState({
		hits:result.data.hits,
		isLoading:false
	}))
	.catch(error =>this.setState({
		error,isLoading:false
		}));
		
	